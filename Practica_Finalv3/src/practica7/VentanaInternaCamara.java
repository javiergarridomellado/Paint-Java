/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica7;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
//import java.io.File;
//import java.util.List;
import javax.media.Buffer;
import javax.media.CaptureDeviceInfo;
import javax.media.CaptureDeviceManager;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
//import javax.media.format.YUVFormat;
import javax.media.util.BufferToImage;

/**
 *Clase VentanaInternaCamara donde se carga imagen de webcam, por motivos que desconozco no funciona en mi sistema pero
 * se ha probado en el del profesor y si lo hace bien
 * @author javi
 */
public class VentanaInternaCamara extends javax.swing.JInternalFrame {

    private Player player;
/**
 * Devuelve player
 * @return Player
 */
    public Player getPlayer() {
        return player;
    }
    
    
    /**
     * Constructor privado , se instancia para evitar lanzar ventanas con excepcion
     * Creates new form VentanaInternaCamara
     */
    private VentanaInternaCamara() {
        initComponents();
         CaptureDeviceInfo deviceInfo;
        
       
        String dName="vfw:Microsoft WDM Image Capture (Win32):0";
        deviceInfo = CaptureDeviceManager.getDevice(dName);
        //System.out.println(deviceInfo);
        
        
       
        //List<CaptureDeviceInfo> deviceList = CaptureDeviceManager.getDeviceList(new YUVFormat());
        //deviceInfo = deviceList.get(0);
        
        MediaLocator ml = deviceInfo.getLocator();
        
        
        try {
            player = Manager.createRealizedPlayer(ml);
            Component vc = player.getVisualComponent();
          
            if(vc!=null)add(vc, java.awt.BorderLayout.CENTER);
               player.start();
              
            }catch(Exception e) {
                System.err.println("VentanaInternaJMFPlayer: "+e);
                player = null;
}
    }
/**
 * Instanciaci√≥n para evitar execpciones que pueden darse en constructor
 * @return VentanaInternaCamara
 */
public static VentanaInternaCamara getInstance(){
        VentanaInternaCamara v = new VentanaInternaCamara();
        
        if(v.player!=null) return v;
            else return null;
}      
/**
 * Devuelve Frame o captura instantanea 
 * @return BufferedImage
 */    
public BufferedImage getFrame(){
    FrameGrabbingControl fgc;
    String claseCtr = "javax.media.control.FrameGrabbingControl";
    fgc = (FrameGrabbingControl)player.getControl(claseCtr );
    Buffer bufferFrame = fgc.grabFrame();
    BufferToImage bti;
    bti=new BufferToImage((VideoFormat)bufferFrame.getFormat());
    Image img = bti.createImage(bufferFrame);
    return (BufferedImage)img;
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Recoge evento de cerrado de la ventana y para la webcam
 * @param evt 
 */
    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        player.close();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
